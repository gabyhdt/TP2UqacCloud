trigger:
  - main

pool: "default"

variables:
  resourceGroupName: 'gaal'
  location: 'Canada Central'
  BlobString: 'patate'
  AzureBlob: 'storagegaal'
  AzureFunctionAppName: 'gaaltriggerblob'
  ServiceBusConnectionString: 'ServiceBusConnectionString'
  ServiceBusQueueName: 'ServiceBusQueueName'

stages:
- stage: infra
  displayName: infra Deployment
  jobs:
  - job: BuildJob 
    displayName: Deploy Storage Resources
    steps:      
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Azure Storage using ARM Template
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement 1(62d2a287-59d6-4af5-93e1-fc3972547184)'
          subscriptionId: '62d2a287-59d6-4af5-93e1-fc3972547184'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/DeployementTP2/storage/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/DeployementTP2/storage/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'StorageAccountDeployment'

      - script: |
          echo ##vso[task.setvariable variable=BlobString;isOutput=true;isSecure=true]$(StorageAccountDeployment.blobstoragestring.value)
        displayName: Assign BlobString Variable
        name: AssignKey

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Azure Function App using ARM Template
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement 1(62d2a287-59d6-4af5-93e1-fc3972547184)'
          subscriptionId: '62d2a287-59d6-4af5-93e1-fc3972547184'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/DeployementTP2/functionApp/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/DeployementTP2/functionApp/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: Deploy Service Bus Resources
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Abonnement 1(62d2a287-59d6-4af5-93e1-fc3972547184)'
          subscriptionId: '62d2a287-59d6-4af5-93e1-fc3972547184'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourceGroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(Build.SourcesDirectory)/DeployementTP2/serviceBus/azuredeploy.json'
          csmParametersFile: '$(Build.SourcesDirectory)/DeployementTP2/serviceBus/azuredeploy.parameters.json'
          deploymentMode: 'Incremental'
          deploymentOutputs: 'ServiceBusOutputs'

      - script: |
          echo ##vso[task.setvariable variable=ServiceBusConnectionString;isOutput=true]$(ServiceBusOutputs.ServiceBusConnectionString.value)
          echo ##vso[task.setvariable variable=ServiceBusQueueName;isOutput=true]$(ServiceBusOutputs.ServiceBusQueueName.value)
        displayName: Assign Service Bus Outputs


- stage: Function
  displayName: Function Deployment
  dependsOn: infra
  jobs:
  - job: FunctionBuild
    displayName: Function Build
    steps:
      - task: DotNetCoreCLI@2
        displayName: Restore Project
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/BlobFunction/*.csproj'
          
      - task: DotNetCoreCLI@2
        displayName: Build Azure Function
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/BlobFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.BinariesDirectory)'

      - task: DotNetCoreCLI@2
        displayName: Publish Azure Function
        inputs:
          command: 'publish'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/BlobFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          publishWebProjects: false
          zipAfterPublish: true
          modifyOutputPath: false

      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifacts
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'


  - job: BuildAndDeployQueueFunction
    displayName: Build and Deploy Queue Function
    steps:
      - task: DotNetCoreCLI@2
        displayName: Restore QueueFunction Project
        inputs:
          command: 'restore'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/QueueFunction/*.csproj'
      
      - task: DotNetCoreCLI@2
        displayName: Build QueueFunction Project
        inputs:
          command: 'build'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/QueueFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.BinariesDirectory)'
      - task: DotNetCoreCLI@2
        displayName: Publish QueueFunction Project
        inputs:
          command: 'publish'
          projects: '$(Build.SourcesDirectory)/DeployementTP2/QueueFunction/*.csproj'
          arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          publishWebProjects: false
          zipAfterPublish: true
      - task: PublishBuildArtifacts@1
        displayName: Publish Build Artifacts for Queue Function
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'queue-drop'
          publishLocation: 'Container'
      - task: AzureFunctionApp@2
        displayName: Deploy Queue Function App
        inputs:
          connectedServiceNameARM: 'Abonnement 1(62d2a287-59d6-4af5-93e1-fc3972547184)'
          appType: 'functionApp'
          appName: '$(AzureFunctionAppName)'
          deployToSlotOrASE: true
          resourceGroupName: '$(resourceGroupName)'
          slotName: 'production'
          package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
          appSettings: |
            -ServiceBus_ConnectionString $(ServiceBusConnectionString)
            -ServiceBus_QueueName $(ServiceBusQueueName)
          deploymentMethod: 'auto'


    
  - job: FunctionDeploy
    displayName: Function Deployment
    dependsOn: FunctionBuild

    variables: 
      blobstring: $[ stageDependencies.storage.BuildJob.outputs['AssignKey.BlobString'] ]

    steps:
      - checkout: none
      - task: DownloadBuildArtifacts@1
        displayName: Download Build Artifacts
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)'
          cleanDestinationFolder: true

      - task: AzureFunctionApp@2
        displayName: Deploy Code to Azure Function App
        inputs:
          connectedServiceNameARM: 'Abonnement 1(62d2a287-59d6-4af5-93e1-fc3972547184)'
          appType: 'functionApp'
          appName: '$(AzureFunctionAppName)'
          deployToSlotOrASE: true
          resourceGroupName: '$(resourceGroupName)'
          slotName: 'production'
          package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
          appSettings: '-Blob_ConnectionString $(blobstring) -Blob_ConnectionString__blob "https://$(AzureBlob).blob.core.windows.net/"'
          deploymentMethod: 'runFromPackage'
